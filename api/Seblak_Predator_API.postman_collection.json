{
  "info": {
    "name": "Seblak Predator API",
    "description": "Restaurant Management System API for Seblak Predator\n\nBase URL: http://localhost/seblak-predator/api\n\nThis collection includes all endpoints for menu management, categories, products, and synchronization.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "seblak-predator-api-collection",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost/seblak-predator/api",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId", 
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"]
            },
            "description": "Retrieve all active categories"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/menu/categories.php",
                  "host": ["{{baseUrl}}"],
                  "path": ["menu", "categories.php"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"cat_product_1\",\n      \"name\": \"Makanan\",\n      \"type\": \"product\",\n      \"is_active\": true,\n      \"created_at\": \"2024-01-01 12:00:00\",\n      \"updated_at\": \"2024-01-01 12:00:00\"\n    }\n  ],\n  \"total\": 1,\n  \"message\": \"Categories retrieved successfully\"\n}"
            }
          ]
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Minuman\",\n  \"type\": \"product\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"]
            },
            "description": "Create a new category"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Minuman\",\n  \"type\": \"product\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/menu/categories.php",
                  "host": ["{{baseUrl}}"],
                  "path": ["menu", "categories.php"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Category created successfully\",\n  \"data\": {\n    \"id\": \"cat_67890abc\",\n    \"name\": \"Minuman\",\n    \"type\": \"product\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Minuman Updated\",\n  \"type\": \"product\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php?id={{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"],
              "query": [
                {
                  "key": "id",
                  "value": "{{categoryId}}"
                }
              ]
            },
            "description": "Update an existing category"
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php?id={{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"],
              "query": [
                {
                  "key": "id",
                  "value": "{{categoryId}}"
                }
              ]
            },
            "description": "Soft delete a category (set is_active to false)"
          }
        }
      ],
      "description": "Category management endpoints"
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"]
            },
            "description": "Retrieve all active products"
          }
        },
        {
          "name": "Get Products by Category",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?category_id={{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "category_id",
                  "value": "{{categoryId}}"
                }
              ]
            },
            "description": "Filter products by category ID"
          }
        },
        {
          "name": "Get Products with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?page=1&per_page=10",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            },
            "description": "Get products with pagination"
          }
        },
        {
          "name": "Get Toppings Only",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?is_topping=true",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "is_topping",
                  "value": "true"
                }
              ]
            },
            "description": "Filter products that are toppings"
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?id={{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "id",
                  "value": "{{productId}}"
                }
              ]
            },
            "description": "Get a specific product by ID"
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Seblak Original\",\n  \"description\": \"Seblak dengan bumbu original\",\n  \"category_id\": \"cat_product_1\",\n  \"price\": 12000,\n  \"image_url\": \"https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=400&h=250&fit=crop\",\n  \"is_topping\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/products.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"]
            },
            "description": "Create a new product"
          }
        },
        {
          "name": "Create Topping",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Keju Extra\",\n  \"description\": \"Tambahan keju mozarella\",\n  \"category_id\": \"cat_topping_1\",\n  \"price\": 3000,\n  \"image_url\": \"https://images.unsplash.com/photo-1552767059-ce182ead6c1b?w=400&h=250&fit=crop\",\n  \"is_topping\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/products.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"]
            },
            "description": "Create a new topping"
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Seblak Original Updated\",\n  \"description\": \"Seblak dengan bumbu original yang diperbarui\",\n  \"category_id\": \"cat_product_1\",\n  \"price\": 13000,\n  \"image_url\": \"https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=400&h=250&fit=crop\",\n  \"is_topping\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?id={{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "id",
                  "value": "{{productId}}"
                }
              ]
            },
            "description": "Update an existing product"
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?id={{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "id",
                  "value": "{{productId}}"
                }
              ]
            },
            "description": "Soft delete a product (set is_active to false)"
          }
        }
      ],
      "description": "Product management endpoints"
    },
    {
      "name": "Sync API",
      "item": [
        {
          "name": "Sync Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/categories.php",
              "host": ["{{baseUrl}}"],
              "path": ["sync", "categories.php"]
            },
            "description": "Get all categories for synchronization"
          }
        },
        {
          "name": "Sync Categories Since Timestamp",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/categories.php?since=2024-01-01 12:00:00",
              "host": ["{{baseUrl}}"],
              "path": ["sync", "categories.php"],
              "query": [
                {
                  "key": "since",
                  "value": "2024-01-01 12:00:00"
                }
              ]
            },
            "description": "Get categories updated since specific timestamp"
          }
        },
        {
          "name": "Sync Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/products.php",
              "host": ["{{baseUrl}}"],
              "path": ["sync", "products.php"]
            },
            "description": "Get all products for synchronization"
          }
        },
        {
          "name": "Sync Products Since Timestamp",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/products.php?since=2024-01-01 12:00:00",
              "host": ["{{baseUrl}}"],
              "path": ["sync", "products.php"],
              "query": [
                {
                  "key": "since",
                  "value": "2024-01-01 12:00:00"
                }
              ]
            },
            "description": "Get products updated since specific timestamp"
          }
        }
      ],
      "description": "Synchronization endpoints for mobile app"
    },
    {
      "name": "Test Scenarios",
      "item": [
        {
          "name": "Invalid JSON Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Invalid JSON\",\n  \"type\": \"product\"\n  // Missing closing brace"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"]
            },
            "description": "Test invalid JSON handling"
          }
        },
        {
          "name": "Missing Required Fields Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"product\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"]
            },
            "description": "Test missing required fields"
          }
        },
        {
          "name": "Invalid Method Test",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/categories.php",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "categories.php"]
            },
            "description": "Test unsupported HTTP method"
          }
        },
        {
          "name": "Non-existent Resource Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/menu/products.php?id=non_existent_id",
              "host": ["{{baseUrl}}"],
              "path": ["menu", "products.php"],
              "query": [
                {
                  "key": "id",
                  "value": "non_existent_id"
                }
              ]
            },
            "description": "Test accessing non-existent resource"
          }
        }
      ],
      "description": "Test scenarios for error handling and validation"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// You can add pre-request scripts here",
          "// For example, to set authentication tokens or log requests"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test scripts",
          "pm.test(\"Response time is less than 2000ms\", function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test(\"Response has required success field\", function () {",
          "    var jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success');",
          "});",
          "",
          "pm.test(\"Response has message field\", function () {",
          "    var jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('message');",
          "});"
        ]
      }
    }
  ]
}